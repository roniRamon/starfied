{"version":3,"sources":["webpack:///webpack/bootstrap c37bb007bc60f7c4b736","webpack:///./lib/board.js","webpack:///./lib/player.js","webpack:///./lib/enemy.js","webpack:///./lib/enemy_small.js","webpack:///./lib/starfied.js","webpack:///./lib/game.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC/PA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5GA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3EA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3EA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;AClCD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c37bb007bc60f7c4b736","const Player = require('./player.js');\nconst Enemy = require('./enemy.js');\nconst EnemySmall = require('./enemy_small.js');\n\nclass Board {\n  constructor (rowCol){\n    this.rowCol = rowCol;\n    this.grid = Board.blankGrid(this.rowCol);\n    this.collisions = false;\n    this.points = 0;\n\n    this.e1 = new EnemySmall(this, \"D\");\n    // this.e2 = new EnemySmall(this, \"D1\");\n    // this.e3 = new EnemySmall(this, \"D\");\n  }\n\n  static blankGrid (rowCol){\n    //create blank grid\n    const grid = [];\n    for (let i = 0; i <rowCol/2; i++) {\n      const row = [];\n      for (let j = 0; j < rowCol; j++) {\n        if(i === 0) row.push(Board.SAFE_SYMBOL);\n        else if(j === 0) row.push(Board.SAFE_SYMBOL);\n        else if(j === rowCol - 1) row.push(Board.SAFE_SYMBOL);\n        else if(i === rowCol/2 - 1) row.push(Board.SAFE_SYMBOL);\n        else row.push(Board.BLANK_SYMBOL);\n      }\n      grid.push(row);\n    }\n    return grid;\n  }\n\n  createTiles(data) {\n\n    let tilesArray = [];\n\n    for (let row of data) {\n      for (let col of row) {\n        let tile = document.createElement('div');\n        tile.classList.add('tile');\n        if (col === Board.SAFE_SYMBOL) {\n          tile.setAttribute('color', 'black');\n          tile.setAttribute('border', true);\n          tile.classList.add('border');\n        }\n        else if (col === Board.BLANK_SYMBOL) {\n          tile.setAttribute('color', 'white');\n          tile.classList.add('empty');\n\n        }\n        else if (col === Board.PLAYER_SYMBOL || col === \"P\") {\n          tile.setAttribute('color', 'yellow');\n          tile.setAttribute('player', 'true');\n          tile.classList.add('player');\n        }\n        else if (col === Board.SENAMY_SYMBOL || col === \"D\" || col === \"D1\") {\n          tile.setAttribute('color', 'red');\n          tile.setAttribute('small-enemy', 'true');\n          tile.classList.add('smalenemy');\n\n          this.e1.changePos();\n          // this.e2.changePos();\n          // this.e3.changePos();\n        }\n        else if (col === Board.ENAMY_SYMBOL || col === \"E\") {\n          tile.setAttribute('color', 'red');\n          tile.setAttribute('enemy', 'true');\n          tile.classList.add('enemy');\n        }\n        else if (col === \"S\") {\n          tile.classList.add('safe');\n        }\n        else if (col === \"-\") {\n          tile.classList.add('trail');\n        }\n        tilesArray.push(tile);\n      }\n      let brTile = document.createElement('br');\n      tilesArray.push(brTile);\n    }\n    return tilesArray;\n  }\n\n  drawMap() {\n    //render board\n    let myBoard = document.createElement('div');\n    myBoard.setAttribute('id', 'myBoard-div');\n\n    let tiles = this.createTiles(this.grid);\n    for (let tile of tiles) {\n      myBoard.appendChild(tile);\n    }\n\n    document.body.appendChild(myBoard);\n  }\n\n  eraseMap() {\n    //delete board\n    let board = document.querySelectorAll(\"#myBoard-div\");\n    board.forEach( el => el.remove());\n  }\n\n\n  validMove (coord){\n    return ((coord[0] >= 0) && (coord[0] < (this.rowCol / 2)) &&\n     (coord[1] >= 0) && (coord[1] < this.rowCol));\n  }\n\n  getCellAt (coord){\n    if(!this.validMove(coord)) return null;\n    return this.grid[coord[0]][coord[1]];\n  }\n\n  setCellAt (coord, val){\n    // console.log(coord, val);\n    if(!this.validMove(coord)) return null;\n    this.grid[coord[0]][coord[1]] = val;\n  }\n\n  collision (){\n    this.collisions = true;\n  }\n\n  floodFillArea (coords) {\n    let neighbour = this.getNeighbours(coords);\n    let res = this.checkAlienPos(neighbour[0]);\n    if (neighbour.length === 4) {\n      if(res === false){\n        this.flood(neighbour[0]);\n      }\n      else if (this.checkAlienPos(neighbour[1]) === false) {\n        this.flood(neighbour[1]);\n      }\n      else if (this.checkAlienPos(neighbour[2]) === false) {\n        this.flood(neighbour[2]);\n      }\n      else if (this.checkAlienPos(neighbour[3]) === false) {\n        this.flood(neighbour[3]);\n      }\n      this.reverseS(neighbour[1]);\n      this.reverseS(neighbour[2]);\n      this.reverseS(neighbour[3]);\n    }\n    else if (neighbour.length === 3) {\n      if(res === false){\n        this.flood(neighbour[0]);\n      }\n      else if (this.checkAlienPos(neighbour[1]) === false) {\n        this.flood(neighbour[1]);\n      }\n      else if (this.checkAlienPos(neighbour[2]) === false) {\n        this.flood(neighbour[2]);\n      }\n      this.reverseS(neighbour[1]);\n      this.reverseS(neighbour[2]);\n    }\n    else if (neighbour.length === 2) {\n      // console.log(\"test\");\n      if(res === false){\n        this.flood(neighbour[0]);\n      }\n      else {\n        this.flood(neighbour[1]);\n      }\n      this.reverseS(neighbour[1]);\n    }\n    else if (neighbour.length === 1) {\n      if(res === false){\n        this.flood(neighbour[0]);\n      }\n    }\n    this.reverseS(neighbour[0]);\n    return;\n  }\n\n  flood (coords){\n    let coordsVal = this.getCellAt(coords);\n    if (coordsVal === \"1\") return;\n    this.setCellAt(coords, \"1\");\n    this.points += 1;\n\n    let diff = [[0,1], [0,-1], [-1,0], [1,0]];\n    diff.forEach( options => {\n      let newCoords = [coords[0] + options[0], coords[1] + options[1]];\n      this.flood(newCoords);\n    });\n    return;\n  }\n\n  checkAlienPos(coords) {\n    let coordVal = this.getCellAt(coords);\n    if (coordVal === \"E\") return true;\n    else if(coordVal === \"1\" || coordVal === \"S\" || coordVal === \"D\" || coordVal === \"D1\") {\n      return;\n    } else {\n      this.setCellAt(coords, \"S\");\n    }\n\n    if (this.validMove([coords[0], coords[1] + 1])){\n      if (this.checkAlienPos([coords[0], coords[1] + 1]) === true ) return true;\n    }\n    if (this.validMove([coords[0], coords[1] - 1])){\n      if (this.checkAlienPos([coords[0], coords[1] - 1]) === true ) return true;\n    }\n    if (this.validMove([coords[0] + 1, coords[1]])){\n      if (this.checkAlienPos([coords[0] + 1, coords[1]]) === true ) return true;\n    }\n    if (this.validMove([coords[0] - 1, coords[1]])){\n      if (this.checkAlienPos([coords[0] - 1, coords[1]]) === true ) return true;\n    }\n\n    return false;\n  }\n\n  reverseS(coords) {\n    if (this.getCellAt(coords) === \"S\" ) {\n      this.setCellAt(coords, \"0\");\n    }\n    else {\n      return;\n    }\n\n    let diff = [ [0, 1], [0, -1], [1, 0], [-1, 0] ];\n    diff.forEach( options => {\n      let newCoords = [coords[0] + options[0], coords[1] + options[1]];\n      return this.reverseS(newCoords);\n    });\n\n    return;\n  }\n\n  getNeighbours(coords){\n    let neighbours = [];\n    let diff = [[ 1, 1], [1, -1], [-1, 1], [-1, -1] ];\n    diff.forEach( options => {\n      let newCoords = [coords[0] + options[0], coords[1] + options[1]];\n      let newCoordVal = this.getCellAt(newCoords);\n      if(newCoordVal === \"0\" || newCoordVal === \"E\" || newCoordVal === \"D\" || newCoordVal === \"D1\"){\n        neighbours.push(newCoords);\n      }\n    });\n    return neighbours;\n  }\n\n}\n\nBoard.BLANK_SYMBOL = \"0\";\nBoard.SAFE_SYMBOL = \"1\";\n\nBoard.PLAYER_SYMBOL = \"P\";\nBoard.ENAMY_SYMBOL = \"E\";\nBoard.SENAMY_SYMBOL = \"D\";\nBoard.MOVE_SYMBOL = \"-\";\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 0\n// module chunks = 0","const Board = require('./board.js');\n\nclass Player {\n  constructor (board){\n    // this.size = [2,2];\n    this.board = board;\n    this.position = this.startPos();\n    this.playerMoves = [];\n\n  }\n\n  startPos (){\n    let row = 0;\n    let col = (this.board.rowCol / 2) - 1;\n    this.board.setCellAt([row, col], \"P\");\n    return [row, col];\n  }\n\n\n  moves (e){\n    switch (e.keyCode) {\n      case 37:\n        this.updatePos(Player.MOVES[3]);\n      break;\n      case 38:\n        this.updatePos(Player.MOVES[1]);\n      break;\n      case 39:\n        this.updatePos(Player.MOVES[2]);\n      break;\n      case 40:\n        this.updatePos(Player.MOVES[0]);\n      break;\n    }\n    return this.position;\n  }\n\n  validMove (pos){\n    return this.board.validMove(pos);\n  }\n\n  collision (){\n    this.board.collision();\n  }\n\n  pos (){\n    return this.position;\n  }\n\n  updatePos (diff){\n    let move =  [this.position[0] + diff[0], this.position[1] + diff[1]];\n    let moveVal = this.board.getCellAt(move);\n\n    if(this.validMove(move)){\n      if( moveVal === \"1\" && this.playerMoves.length === 0) {\n        //1. move on boarder with empty arr - nothing\n        this.board.setCellAt(this.position, \"1\");\n        this.board.setCellAt(move, \"P\");\n      }\n      else if (moveVal === \"1\" && !(this.playerMoves.length === 0)) {\n        //2. move on boarder with NOT empty array - flood fill, make arr el safe zone, empty arr\n        this.playerMoves.forEach( coord => this.board.setCellAt(coord, \"1\"));\n        this.board.floodFillArea(move);\n        this.board.points += this.playerMoves.length;\n        this.playerMoves = [];\n        this.board.setCellAt(move, \"P\");\n      }\n      else if (moveVal === \"0\" && this.playerMoves.length === 0 ) {\n        //3. move on empty space + empty arr = push pos to arr until reach\n        // safe zone, current pos make safe zone back\n        this.playerMoves.push(move);\n        this.board.setCellAt(this.position, \"1\");\n        this.board.setCellAt(move, \"P\");\n      }\n      else if (moveVal === \"0\") {\n        //4. move on empty space = push pos to arr\n        this.playerMoves.push(move);\n        this.board.setCellAt(this.position, \"-\");\n        this.board.setCellAt(move, \"P\");\n      }\n      else {\n        //collision with \"-\" or \"E\" or \"D\"\n        this.collision();\n      }\n      this.position = move;\n    }\n    return this.position;\n  }\n\n  cleareArrayOfMoves (){\n    if(this.playerMoves.length > 0) {\n      this.playerMoves.forEach( move => {\n        this.board.setCellAt(move, \"0\");\n      });\n      this.playerMoves = [];\n    }\n    this.board.setCellAt(this.position, \"0\");\n  }\n\n}\n\nPlayer.MOVES = [\n  [1,0],\n  [-1,0],\n  [0,1],\n  [0,-1]\n];\n\nmodule.exports = Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 1\n// module chunks = 0","const Board = require('./board.js');\n\nclass Enemy {\n  constructor (board, opt){\n    this.board = board;\n    this.classE = opt;\n    this.position = this.startPos();\n    setInterval(() => this.moves(this.random_move()), 200);\n  }\n\n  startPos (){\n    let col = Math.floor(Math.random() * Math.floor(this.board.rowCol-2)) + 1;\n    let row = Math.floor(Math.random() * Math.floor((this.board.rowCol / 2)-2)) +1;\n    this.board.setCellAt([row, col], this.classE);\n    return [row, col];\n  }\n\n  random_move (){\n    return Enemy.MOVES[Math.floor(Math.random() * 4) +1];\n  }\n\n  moves (randomDiff){\n    let diff;\n    let moveTo;\n    try {\n      moveTo = [this.position[0] + randomDiff[0], this.position[1] + randomDiff[1]];\n    }\n    catch(err) {\n      moveTo = this.position;\n    }\n\n    let moveVal = this.board.getCellAt(moveTo);\n    while(moveVal === \"1\" || !this.board.validMove(moveTo)) {\n      try {\n        diff = this.random_move();\n        moveTo = [this.position[0] + diff[0], this.position[1] + diff[1]];\n      }\n      catch(err) {\n        moveTo = this.position;\n      }\n      moveVal = this.board.getCellAt(moveTo);\n    }\n\n    if(moveVal === \"P\"){\n      this.collisions();\n      return this.position;\n    }\n    else if (moveVal === \"-\") {\n      this.collisions();\n      return this.position;\n    }\n    else if (moveVal === \"0\") {\n      this.board.setCellAt(this.position, \"0\");\n      this.position = moveTo;\n      this.board.setCellAt(moveTo, this.classE);\n    }\n    else {\n      return this.position;\n    }\n    return this.position;\n  }\n\n  collisions (){\n    this.board.collision();\n  }\n\n}\n\nEnemy.MOVES = [\n  [1,0],\n  [-1,0],\n  [0,1],\n  [0,-1]\n];\n\nmodule.exports = Enemy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/enemy.js\n// module id = 2\n// module chunks = 0","const Board = require('./board.js');\n\nclass EnemySmall {\n  constructor (board, classE){\n    this.board = board;\n    this.classE = classE;\n    this.position = this.startPos();\n\n  }\n\n  changePos(){\n    this.moves(this.random_move());\n  }\n\n  startPos (){\n    let col = Math.floor(Math.random() * Math.floor(this.board.rowCol-2)) + 1;\n    let row = Math.floor(Math.random() * Math.floor((this.board.rowCol / 2)-2)) +1;\n    this.board.setCellAt([row, col], this.classE);\n    return [row, col];\n  }\n\n  random_move (){\n    return EnemySmall.MOVES[Math.floor(Math.random() * 4) +1];\n  }\n\n  moves (randomDiff){\n    let diff;\n    let moveTo;\n    try {\n      moveTo = [this.position[0] + randomDiff[0], this.position[1] + randomDiff[1]];\n    }\n    catch(err) {\n      moveTo = this.position;\n    }\n\n    let moveVal = this.board.getCellAt(moveTo);\n    while(moveVal === \"1\" || !this.board.validMove(moveTo)) {\n      try {\n        diff = this.random_move();\n        moveTo = [this.position[0] + diff[0], this.position[1] + diff[1]];\n      }\n      catch(err) {\n        moveTo = this.position;\n      }\n      moveVal = this.board.getCellAt(moveTo);\n    }\n\n    if(moveVal === \"P\"){\n      this.collisions();\n      return this.position;\n    }\n    else if (moveVal === \"-\") {\n      this.collisions();\n      return this.position;\n    }\n    else if (moveVal === \"0\") {\n      this.board.setCellAt(this.position, \"0\");\n      this.position = moveTo;\n      this.board.setCellAt(moveTo, this.classE);\n    }\n    return this.position;\n  }\n\n  collisions (){\n    this.board.collision();\n  }\n}\n\nEnemySmall.MOVES = [\n  [1,0],\n  [-1,0],\n  [0,1],\n  [0,-1]\n];\n\nmodule.exports = EnemySmall;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/enemy_small.js\n// module id = 3\n// module chunks = 0","const Game = require('./game.js');\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  window.location.href = '#rules';\n\n  let elem = document.getElementById('over');\n  let elem2 = document.getElementById('over2');\n  let elem3 = document.getElementById('start1');\n\n  let scrrenSize = window.innerWidth;\n  let options;\n\n  if (scrrenSize > 1504) options = 50;\n  else if (scrrenSize > 1202) options = 40;\n  else if (scrrenSize > 900) options = 30;\n  else if (scrrenSize < 900 ) options = 20;\n\n  let game = new Game(options);\n\n  elem.onclick = modalClick;\n  elem2.onclick = modalClick;\n  elem3.onclick = modalClick;\n\n  function modalClick(){\n    scrrenSize = window.innerWidth;\n    if (scrrenSize > 1504) options = 50;\n    else if (scrrenSize > 1202) options = 40;\n    else if (scrrenSize > 900) options = 30;\n    else if (scrrenSize < 900 ) options = 20;\n    //restart game\n    game.restart(options);\n    window.location.href = '#close';\n  }\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/starfied.js\n// module id = 4\n// module chunks = 0","const Board = require('./board.js');\nconst Player = require('./player.js');\nconst Enemy = require('./enemy.js');\nconst EnemySmall = require('./enemy_small.js');\n\n\nclass Game {\n  constructor (){\n    this.board;\n    this.score = 0;\n    this.life = 0;\n    this.player;\n    this.ememy;\n    this.e1;\n  }\n\n  win (){\n    window.location.href = '#win';\n  }\n\n  gameOver (){\n    window.location.href = '#winOrLose';\n  }\n\n  restart (option = 50){\n    this.board = new Board(option);\n    this.board.drawMap();\n    this.score = 0;\n    this.life = 3;\n\n    this.player = new Player(this.board);\n    this.enemy = new Enemy(this.board, \"E\");\n\n    document.addEventListener('keydown', (e) => {\n      this.player.moves(e);\n    });\n    this.gameLoop();\n  }\n\n  calcScore (){\n    return this.board.points / (((this.board.rowCol / 2.0) - 2.0) * (this.board.rowCol - 2.0)) * 100;\n  }\n\n  gameLoop (){\n    let gameLoopTimer = setInterval(() => {\n      this.showPoints();\n      this.board.eraseMap();\n      this.board.drawMap();\n      if(this.board.collisions){\n        this.board.collisions = false;\n        this.life -= 1;\n        this.score = this.calcScore();\n        this.player.cleareArrayOfMoves();\n        this.board.setCellAt(this.player.position, \"0\");\n        this.player.position = this.player.startPos();\n      }\n      if (this.life === 0 ) {\n        this.showPoints();\n        clearInterval(gameLoopTimer);\n        this.gameOver();\n      }\n      this.score = this.calcScore().toFixed(2);\n      if (this.score >= 80 ) {\n        this.showPoints();\n        clearInterval(gameLoopTimer);\n        this.win();\n      }\n    }, 100);\n  }\n\n  showPoints (){\n    let pointP = document.getElementById('points-div');\n    let prese = this.calcScore().toFixed(2);\n    pointP.innerHTML = \"Score: \" + prese + \"% <br> Life: \";\n    for (var i = 0; i < this.life; i++) {\n      let tile = document.createElement('div');\n      tile.classList.add('tile');\n      tile.classList.add('player');\n      pointP.appendChild(tile);\n    }\n  }\n\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}